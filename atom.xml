<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Runoneall</title>
  
  
  <link href="https://blog.oneall.eu.org/atom.xml" rel="self"/>
  
  <link href="https://blog.oneall.eu.org/"/>
  <updated>2025-05-01T10:34:55.000Z</updated>
  <id>https://blog.oneall.eu.org/</id>
  
  <author>
    <name>Tom Brown</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Github部署静态博客</title>
    <link href="https://blog.oneall.eu.org/2025/05/01/Github%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    <id>https://blog.oneall.eu.org/2025/05/01/Github%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</id>
    <published>2025-05-01T10:34:55.000Z</published>
    <updated>2025-05-01T10:34:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>此文章非Pages教程，我打算从typecho迁移到hexo，但是之前因为文件丢过一次，导致整个博客彻底停更，就一直用的typecho，后来得群友启发，用GitHub Action自动打包推到Netlify，颇有成效，于是写篇文章出来</p><p>具体可看：<a href="https://github.com/runoneall/blog">https://github.com/runoneall/blog</a></p><ol><li><p>创建仓库，名称随意，注意 .gitignore 选 Node<br>这里我直接用blog做仓库名</p></li><li><p>创建codespace<br><img src="https://s.rmimg.com/2025-05-01/1746087828-570689-2025-05-01-162319.png" alt="Image description"></p></li><li><p>按照hexo官方教程搭建博客<br>这里文件夹我还是用 blog，<code>npx hexo init blog</code></p></li><li><p>搭建好后创建workflow</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Build</span> <span class="string">And</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">Public</span> <span class="string">Branch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build-and-deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">repository</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v4</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">fetch-depth:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">Node.js</span> <span class="string">LTS</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@main</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">latest</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Hexo</span> <span class="string">CLI</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span> <span class="string">and</span> <span class="string">generate</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          cd blog</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string">          npx hexo clean</span></span><br><span class="line"><span class="string">          npx hexo generate</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">public</span> <span class="string">branch</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REPO_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./blog/public</span></span><br><span class="line">          <span class="attr">destination_dir:</span> <span class="string">./</span></span><br><span class="line">          <span class="attr">publish_branch:</span> <span class="string">public</span></span><br><span class="line">          <span class="attr">keep_files:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>意思是：拉取代码 -&gt; 安装nodejs -&gt; 安装hexo -&gt; 安装依赖并生成静态文件 -&gt; 提交到public分支<br>(这里需要在仓库设置里创建名为REPO_TOKEN的secret，令牌需要对仓库有写入权限，勾选repo即可)</p><ol start="5"><li>在netlify上创建项目，选择blog仓库，分支选public，点部署即可</li></ol><p>这样一来只要GitHub不炸文件就丢不了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;此文章非Pages教程，我打算从typecho迁移到hexo，但是之前因为文件丢过一次，导致整个博客彻底停更，就一直用的typecho，后来得群友启发，用GitHub Action自动打包推到Netlify，颇有成效，于是写篇文章出来&lt;/p&gt;
&lt;p&gt;具体可看：&lt;a href</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>alpine的alist服务脚本</title>
    <link href="https://blog.oneall.eu.org/2025/04/30/alpine%E7%9A%84alist%E6%9C%8D%E5%8A%A1%E8%84%9A%E6%9C%AC/"/>
    <id>https://blog.oneall.eu.org/2025/04/30/alpine%E7%9A%84alist%E6%9C%8D%E5%8A%A1%E8%84%9A%E6%9C%AC/</id>
    <published>2025-04-30T04:32:00.000Z</published>
    <updated>2025-04-30T04:47:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>此是对 <a href="https://dev.oneall.eu.org/archives/63">https://dev.oneall.eu.org/archives/63</a> 的补充<br>原帖用的 screen 来启动 alist，但缺点是开机得手动启动</p><p>于是我参考了这篇帖子 <a href="https://mailberry.com.cn/2024/12/alpine-install-alist">https://mailberry.com.cn/2024/12/alpine-install-alist</a><br>实测不可用</p><p>于是我开始对原贴脚本进行修改<br><code>/etc/init.d/alist</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/sbin/openrc-run</span></span><br><span class="line"></span><br><span class="line">name=&quot;alist&quot;</span><br><span class="line">description=&quot;Alist service&quot;</span><br><span class="line">pidfile=&quot;/var/run/alist.pid&quot;</span><br><span class="line">directory=&quot;/root/alistrun&quot;</span><br><span class="line">command=&quot;./alist&quot;</span><br><span class="line">command_args=&quot;server&quot;</span><br><span class="line"></span><br><span class="line">depend() &#123;</span><br><span class="line">    need net</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start_pre() &#123;</span><br><span class="line">    checkpath --directory --owner root:root --mode 0755 &quot;$directory&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start() &#123;</span><br><span class="line">    ebegin &quot;Starting $name&quot;</span><br><span class="line">    cd &quot;$directory&quot; || return 1</span><br><span class="line">    nohup $command $command_args &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">    echo $! &gt; &quot;$pidfile&quot;</span><br><span class="line">    eend $?</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop() &#123;</span><br><span class="line">    ebegin &quot;Stopping $name&quot;</span><br><span class="line">    if [ -f &quot;$pidfile&quot; ]; then</span><br><span class="line">        kill $(cat &quot;$pidfile&quot;) 2&gt;/dev/null</span><br><span class="line">        rm -f &quot;$pidfile&quot;</span><br><span class="line">    fi</span><br><span class="line">    eend $?</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/init.d/alist</span><br><span class="line">rc-update add alist</span><br></pre></td></tr></table></figure><p>启动：<code>rc-service alist start</code><br>停止：<code>rc-service alist stop</code><br>状态：<code>rc-service alist status</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;此是对 &lt;a href=&quot;https://dev.oneall.eu.org/archives/63&quot;&gt;https://dev.oneall.eu.org/archives/63&lt;/a&gt; 的补充&lt;br&gt;原帖用的 screen 来启动 alist，但缺点是开机得手动启动&lt;/p</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>将域名添加到fnl小鸡上</title>
    <link href="https://blog.oneall.eu.org/2025/04/29/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%B7%BB%E5%8A%A0%E5%88%B0fnl%E5%B0%8F%E9%B8%A1%E4%B8%8A/"/>
    <id>https://blog.oneall.eu.org/2025/04/29/%E5%B0%86%E5%9F%9F%E5%90%8D%E6%B7%BB%E5%8A%A0%E5%88%B0fnl%E5%B0%8F%E9%B8%A1%E4%B8%8A/</id>
    <published>2025-04-29T13:25:57.000Z</published>
    <updated>2025-04-29T13:25:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>这里以 alist.oneall.eu.org 为例</p><ol><li><p>开放端口<br><img src="https://s.rmimg.com/2025-04-29/1745919888-694481-2025-04-29-173721.png" alt="Image description"></p></li><li><p>将域名指向fnl小鸡ip（先不开小黄云过验证）<br><img src="https://s.rmimg.com/2025-04-29/1745919695-388859-2025-04-29-173609.png" alt="Image description"></p></li><li><p>到管理面板添加域名<br><img src="https://s.rmimg.com/2025-04-29/1745919743-131494-2025-04-29-173734.png" alt="Image description"></p></li><li><p>按要求添加根域验证（验证成功后打开小黄云）<br><img src="https://s.rmimg.com/2025-04-29/1745919794-600079-2025-04-29-173632.png" alt="Image description"></p></li><li><p>创建origin rules<br><img src="https://s.rmimg.com/2025-04-29/1745919847-337763-2025-04-29-173839.png" alt="Image description"><br><img src="https://s.rmimg.com/2025-04-29/1745919930-493146-2025-04-29-173846.png" alt="Image description"></p></li><li><p>若小鸡没有ssl证书<br><img src="https://s.rmimg.com/2025-04-29/1745919953-923417-2025-04-29-173642.png" alt="Image description"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这里以 alist.oneall.eu.org 为例&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;开放端口&lt;br&gt;&lt;img src=&quot;https://s.rmimg.com/2025-04-29/1745919888-694481-2025-04-29-173721.png&quot; alt=</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>alpine部署alist</title>
    <link href="https://blog.oneall.eu.org/2025/04/29/alpine%E9%83%A8%E7%BD%B2alist/"/>
    <id>https://blog.oneall.eu.org/2025/04/29/alpine%E9%83%A8%E7%BD%B2alist/</id>
    <published>2025-04-29T10:52:15.000Z</published>
    <updated>2025-04-29T10:52:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>记一次从 claw cloud run 迁移到 fnl mini 的经历，之前已经重装成 alpine 系统了，所以是 alpine 部署 alist 教程</p><p>基本版本可从 app launchpad 找到<br><img src="https://s.rmimg.com/2025-04-29/1745916291-632035-2025-04-29-164259.png" alt="Image description"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">apk add screen</span><br><span class="line">mkdir alistrun &amp;&amp; cd alistrun</span><br><span class="line">wget https://github.com/AlistGo/alist/releases/download/v3.41.0/alist-linux-musl-amd64.tar.gz</span><br><span class="line">tar -xzf alist-linux-musl-amd64.tar.gz</span><br><span class="line">rm alist-linux-musl-amd64.tar.gz</span><br><span class="line">chmod +x alist</span><br><span class="line">screen -R alist</span><br><span class="line">./alist server</span><br><span class="line">&lt;Control + A&gt; d</span><br><span class="line">cd ..</span><br></pre></td></tr></table></figure><p>在 .&#x2F;alist server 时，会出现一次行密码，第一次登录需要<br><img src="https://s.rmimg.com/2025-04-29/1745916389-874980-2025-04-29-163903.png" alt="Image description"></p><p>因为 alpine 使用 musl，所以需要下载 alist 的 musl 版本，若使用默认 gcc 版本会遇到命令无任何输出的情况</p><p>替换 releases&#x2F;download&#x2F;v3.41.0 可以安装 alist 其他版本</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;记一次从 claw cloud run 迁移到 fnl mini 的经历，之前已经重装成 alpine 系统了，所以是 alpine 部署 alist 教程&lt;/p&gt;
&lt;p&gt;基本版本可从 app launchpad 找到&lt;br&gt;&lt;img src=&quot;https://s.rmim</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>这存储用不完了</title>
    <link href="https://blog.oneall.eu.org/2025/04/28/%E8%BF%99%E5%AD%98%E5%82%A8%E7%94%A8%E4%B8%8D%E5%AE%8C%E4%BA%86/"/>
    <id>https://blog.oneall.eu.org/2025/04/28/%E8%BF%99%E5%AD%98%E5%82%A8%E7%94%A8%E4%B8%8D%E5%AE%8C%E4%BA%86/</id>
    <published>2025-04-28T15:24:43.000Z</published>
    <updated>2025-04-28T15:24:43.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s.rmimg.com/2025-04-28/1745845841-390892-2025-04-28-210911.png" alt="Image description"><br>第一个用的阿里云盘Open的驱动，貌似直接登录会卡住，用的扫码的方式获取token，存了部完整的魔禁，还剩60多G</p><p>第二个是cfr2，存储容量不明，有说总共10G的，有说每月10G的，主要是文件分享和图床，开了域名访问和页面缓存规则</p><p>第三个是看到 <a href="https://www.nodeloc.com/d/27848">https://www.nodeloc.com/d/27848</a> 领的，现在被薅没了，选的ny</p><p>第四个是看到 <a href="https://www.nodeloc.com/d/5943">https://www.nodeloc.com/d/5943</a> 领的，没用邀请码，貌似现在是超过20G要收费了</p><p>这个Alist部署在claw cloud run上，每月5刀赠金，消耗0.04每天，完全没问题</p><p>挂载时策略选302，与服务商服务器直连，不会消耗alist服务器流量</p><p>还剩 60+25+20&#x3D;105G，完全够用，我不是屯屯党</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s.rmimg.com/2025-04-28/1745845841-390892-2025-04-28-210911.png&quot; alt=&quot;Image description&quot;&gt;&lt;br&gt;第一个用的阿里云盘Open的驱动，貌似直接登录会卡住，</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>为Mini小鸡扩展1GB虚拟内存</title>
    <link href="https://blog.oneall.eu.org/2025/04/24/%E4%B8%BAMini%E5%B0%8F%E9%B8%A1%E6%89%A9%E5%B1%951GB%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/"/>
    <id>https://blog.oneall.eu.org/2025/04/24/%E4%B8%BAMini%E5%B0%8F%E9%B8%A1%E6%89%A9%E5%B1%951GB%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</id>
    <published>2025-04-24T11:02:00.000Z</published>
    <updated>2025-04-24T11:04:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s.rmimg.com/2025-04-24/1745484882-765922-2025-04-24-165309.png" alt="Image description"><br>是从某个一键脚本抽离出来的</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">new_swap=1024  <span class="comment"># 单位MB</span></span><br><span class="line">swap_partitions=$(grep -E <span class="string">&#x27;^/dev/&#x27;</span> /proc/swaps | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> partition <span class="keyword">in</span> <span class="variable">$swap_partitions</span>; <span class="keyword">do</span></span><br><span class="line">    swapoff <span class="string">&quot;<span class="variable">$partition</span>&quot;</span></span><br><span class="line">    wipefs -a <span class="string">&quot;<span class="variable">$partition</span>&quot;</span></span><br><span class="line">    mkswap -f <span class="string">&quot;<span class="variable">$partition</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">swapoff /swapfile</span><br><span class="line"><span class="built_in">rm</span> -f /swapfile</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=/swapfile bs=1M count=<span class="variable">$new_swap</span></span><br><span class="line"><span class="built_in">chmod</span> 600 /swapfile</span><br><span class="line">mkswap /swapfile</span><br><span class="line">swapon /swapfile</span><br></pre></td></tr></table></figure><p>需要root，开机后运行一次就可以了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s.rmimg.com/2025-04-24/1745484882-765922-2025-04-24-165309.png&quot; alt=&quot;Image description&quot;&gt;&lt;br&gt;是从某个一键脚本抽离出来的&lt;/p&gt;
&lt;figure c</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>一个占用较小的网络浏览器</title>
    <link href="https://blog.oneall.eu.org/2025/04/23/%E4%B8%80%E4%B8%AA%E5%8D%A0%E7%94%A8%E8%BE%83%E5%B0%8F%E7%9A%84%E7%BD%91%E7%BB%9C%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    <id>https://blog.oneall.eu.org/2025/04/23/%E4%B8%80%E4%B8%AA%E5%8D%A0%E7%94%A8%E8%BE%83%E5%B0%8F%E7%9A%84%E7%BD%91%E7%BB%9C%E6%B5%8F%E8%A7%88%E5%99%A8/</id>
    <published>2025-04-23T17:33:19.000Z</published>
    <updated>2025-04-23T17:33:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>是对 <a href="https://dev.oneall.eu.org/archives/59">https://dev.oneall.eu.org/archives/59</a> 的补充<br><img src="https://s.rmimg.com/2025-04-23/1745422179-289992-2025-04-23-232812.png" alt="Image description"><br>图中博客是vuepress，算是较现代了，占用还算可以<br><code>apk add falkon</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;是对 &lt;a href=&quot;https://dev.oneall.eu.org/archives/59&quot;&gt;https://dev.oneall.eu.org/archives/59&lt;/a&gt; 的补充&lt;br&gt;&lt;img src=&quot;https://s.rmimg.com/2025-04</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>Mini小鸡搭一个还算能用的云电脑</title>
    <link href="https://blog.oneall.eu.org/2025/04/22/Mini%E5%B0%8F%E9%B8%A1%E6%90%AD%E4%B8%80%E4%B8%AA%E8%BF%98%E7%AE%97%E8%83%BD%E7%94%A8%E7%9A%84%E4%BA%91%E7%94%B5%E8%84%91/"/>
    <id>https://blog.oneall.eu.org/2025/04/22/Mini%E5%B0%8F%E9%B8%A1%E6%90%AD%E4%B8%80%E4%B8%AA%E8%BF%98%E7%AE%97%E8%83%BD%E7%94%A8%E7%9A%84%E4%BA%91%E7%94%B5%E8%84%91/</id>
    <published>2025-04-22T10:40:00.000Z</published>
    <updated>2025-04-23T16:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>浏览网页一点问题没有，配置低的vps也可以看<br><img src="https://s.rmimg.com/2025-04-22/1745310185-392883-2025-04-22-161856.png" alt="Image description"></p><p>第一步刷轻量系统，这里用alpine 3.20</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O vps.sh https://raw.githubusercontent.com/everett7623/vps_scripts/main/vps.sh &amp;&amp; <span class="built_in">chmod</span> +x vps.sh &amp;&amp; clear &amp;&amp; ./vps.sh</span><br></pre></td></tr></table></figure><ol><li>安装桌面（这里用lxqt加lxdm）</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">setup-xorg-base</span><br><span class="line">setup-user  <span class="comment"># 桌面不能root登录</span></span><br><span class="line">apk add lxqt-desktop lxqt-core lxqt-panel lxqt-admin lxqt-config lxqt-notificationd lxqt-powermanagement lxqt-themes openbox setxkbmap</span><br><span class="line">addgroup &lt;user&gt; input  <span class="comment"># 将新创建的普通用户加入input和video组</span></span><br><span class="line">addgroup &lt;user&gt; video</span><br><span class="line">apk add dbus dbus-x11 lxdm</span><br><span class="line">rc-update add dbus</span><br><span class="line">rc-update add lxdm</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><ol start="2"><li>字体和图标</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apk add breeze-icons font-noto-cjk</span><br></pre></td></tr></table></figure><ol start="3"><li>浏览器（火狐算是比较流畅的了）</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apk add firefox</span><br></pre></td></tr></table></figure><ol start="4"><li><p>开启VNC<br><img src="https://s.rmimg.com/2025-04-22/1745311117-804227-2025-04-22-163755.png" alt="Image description"></p></li><li><p>重启系统</p></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;浏览网页一点问题没有，配置低的vps也可以看&lt;br&gt;&lt;img src=&quot;https://s.rmimg.com/2025-04-22/1745310185-392883-2025-04-22-161856.png&quot; alt=&quot;Image description&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>这次的ba 6th pv吃了不少Eva的点</title>
    <link href="https://blog.oneall.eu.org/2025/04/21/%E8%BF%99%E6%AC%A1%E7%9A%84ba%206th%20pv%E5%90%83%E4%BA%86%E4%B8%8D%E5%B0%91Eva%E7%9A%84%E7%82%B9/"/>
    <id>https://blog.oneall.eu.org/2025/04/21/%E8%BF%99%E6%AC%A1%E7%9A%84ba%206th%20pv%E5%90%83%E4%BA%86%E4%B8%8D%E5%B0%91Eva%E7%9A%84%E7%82%B9/</id>
    <published>2025-04-21T10:35:50.000Z</published>
    <updated>2025-04-21T10:35:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>以下仅表个人观点，欢迎勘误</p><ol><li><p>绫波丽泡LCL<br><img src="https://s.rmimg.com/2025-04-21/1745221853-895725-2025-04-21-153511.png" alt="Image description"></p></li><li><p>WILLE在巴黎修复反L结界<br><img src="https://s.rmimg.com/2025-04-21/1745223009-343942-2025-04-21-153637.png" alt="Image description"></p></li><li><p>NERV的一艘战舰（推测为Erbsünde）<br><img src="https://s.rmimg.com/2025-04-21/1745223105-626384-2025-04-21-153832.png" alt="Image description"></p></li><li><p>暴走的初号机<br><img src="https://s.rmimg.com/2025-04-21/1745223167-554678-2025-04-21-153951.png" alt="Image description"></p></li><li><p>量产机<br><img src="https://s.rmimg.com/2025-04-21/1745223179-105679-2025-04-21-154025.png" alt="Image description"></p></li><li><p>屋岛作战前（虽然人数不对）<br><img src="https://s.rmimg.com/2025-04-21/1745223201-309792-2025-04-21-154039.png" alt="Image description"></p></li><li><p>大决战前明日香和真希波<br><img src="https://s.rmimg.com/2025-04-21/1745223324-691409-2025-04-21-154126.png" alt="Image description"></p></li><li><p>初号机和13号机（碇源堂和碇真嗣）<br><img src="https://s.rmimg.com/2025-04-21/1745223444-926117-2025-04-21-154201.png" alt="Image description"></p></li><li><p>装备阳电子炮4444C开火<br><img src="https://s.rmimg.com/2025-04-21/1745223582-250486-2025-04-21-154330.png" alt="Image description"></p></li><li><p>初号机光翼<br><img src="https://s.rmimg.com/2025-04-21/1745223659-685648-2025-04-21-154428.png" alt="Image description"><br><img src="https://s.rmimg.com/2025-04-21/1745223661-64023-2025-04-21-154444.png" alt="Image description"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;以下仅表个人观点，欢迎勘误&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;绫波丽泡LCL&lt;br&gt;&lt;img src=&quot;https://s.rmimg.com/2025-04-21/1745221853-895725-2025-04-21-153511.png&quot; alt=&quot;Image des</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>Typecho使用Fastly CDN</title>
    <link href="https://blog.oneall.eu.org/2025/04/20/Typecho%E4%BD%BF%E7%94%A8Fastly%20CDN/"/>
    <id>https://blog.oneall.eu.org/2025/04/20/Typecho%E4%BD%BF%E7%94%A8Fastly%20CDN/</id>
    <published>2025-04-20T15:01:00.000Z</published>
    <updated>2025-04-20T15:02:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要介绍从FNL CDN迁移到Fastly的过程，及踩过的坑</p><p><del>某睿智博主花了两天搞的东西（悲</del><br><img src="https://s.rmimg.com/2025-04-20/1745147772-901837-2025-04-20-191339.png" alt="Image description"></p><p>首先是得有 Fastly 账号，然后到 <a href="https://manage.fastly.com/configure">https://manage.fastly.com/configure</a> 配置CDN服务</p><p>配置好后大概是这样<br><img src="https://s.rmimg.com/2025-04-20/1745147889-471716-2025-04-20-191804.png" alt="Image description"></p><p>点击 Service configuration -&gt; Edit configuration -&gt; Clone to edit</p><ol><li>配置源站<br>  <img src="https://s.rmimg.com/2025-04-20/1745148062-585026-2025-04-20-192059.png" alt="Image description"><br>  <img src="https://s.rmimg.com/2025-04-20/1745152648-633351-2025-04-20-203722.png" alt="Image description"><br>  <img src="https://s.rmimg.com/2025-04-20/1745152742-341826-2025-04-20-203857.png" alt="Image description"><br>  <img src="https://s.rmimg.com/2025-04-20/1745152760-792035-2025-04-20-203916.png" alt="Image description"></li></ol><p>  点击 Origins 并找到源站（这里是Serv00）并点击笔图标</p><ul><li>Name 随便写</li><li>Address 写源站IP</li><li>Enable TLS 若源站有则开启（Serv00 Panel域名有，这里开启）</li><li>Certificate hostname 要和源站 TLS 证书匹配</li><li>SNI hostname 若源站有证书则点开 Match the SNI hostname to the Certificate hostname</li><li>Override host 填博客域名，这里是 dev.oneall.eu.org</li><li>其他保持默认</li></ul><ol start="2"><li>配置加速选项<br>  点击 Settings 并按需求开启（以下是我的配置）</li></ol><ul><li>Serve stale content on origin failure</li><li>Force TLS and enable HSTS</li><li>HTTP&#x2F;3</li><li>其余关闭</li></ul><ol start="3"><li>配置缓存<br>  <img src="https://s.rmimg.com/2025-04-20/1745153319-701066-2025-04-20-204833.png" alt="Image description"><br>  <img src="https://s.rmimg.com/2025-04-20/1745153361-225122-2025-04-20-204917.png" alt="Image description"><br>  <img src="https://s.rmimg.com/2025-04-20/1745153385-783210-2025-04-20-204942.png" alt="Image description"></li></ol><p>  Fastly默认缓存全站，当你发现后台 &#x2F;admin 进不去或有时能进去，请按照以下配置（我这19个version有10个都是栽在这了）</p><ul><li>Create cache setting</li><li>Condition -&gt; attach a condition</li><li>Name: Is Admin</li><li>Apply if: req.url ~ “^&#x2F;admin”</li><li>Save and apply to this cache setting</li><li>Name: 随便写</li><li>Action: Pass</li><li>其他留空</li></ul><ol start="4"><li>压缩<br>  <img src="https://s.rmimg.com/2025-04-20/1745153516-709386-2025-04-20-205152.png" alt="Image description"></li></ol><p>  点击 Content -&gt; Compression</p><ul><li>按需开启</li></ul><p>若要配置 SSL 前往 <a href="https://manage.fastly.com/network/domains">https://manage.fastly.com/network/domains</a><br><img src="https://s.rmimg.com/2025-04-20/1745153784-264081-2025-04-20-205619.png" alt="Image description"></p><p>将域名接入Fastly</p><ol><li>前往 SSL 证书的 View subscription details</li><li>找到 TLS configuration and DNS details -&gt; View &#x2F; Edit<br>  <img src="https://s.rmimg.com/2025-04-20/1745153906-304170-2025-04-20-205821.png" alt="Image description"></li><li>按需选择添加记录即可</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主要介绍从FNL CDN迁移到Fastly的过程，及踩过的坑&lt;/p&gt;
&lt;p&gt;&lt;del&gt;某睿智博主花了两天搞的东西（悲&lt;/del&gt;&lt;br&gt;&lt;img src=&quot;https://s.rmimg.com/2025-04-20/1745147772-901837-2025-04-20</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>AliceNetwork开发者云管理Bot</title>
    <link href="https://blog.oneall.eu.org/2025/04/19/AliceNetwork%E5%BC%80%E5%8F%91%E8%80%85%E4%BA%91%E7%AE%A1%E7%90%86Bot/"/>
    <id>https://blog.oneall.eu.org/2025/04/19/AliceNetwork%E5%BC%80%E5%8F%91%E8%80%85%E4%BA%91%E7%AE%A1%E7%90%86Bot/</id>
    <published>2025-04-19T05:46:03.000Z</published>
    <updated>2025-04-19T05:46:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>云湖机器人（需下载云湖APP）</p><p>效果图：<br><img src="https://s.rmimg.com/2025-04-19/1745027138-305955-2025-04-19-093942.png" alt="Image description"><br><img src="https://s.rmimg.com/2025-04-19/1745027141-233577-2025-04-19-094122.png" alt="Image description"><br><img src="https://s.rmimg.com/2025-04-19/1745027143-928952-2025-04-19-094225.png" alt="Image description"></p><p>直接体验：<br><a href="https://yhfx.jwznb.com/share?key=YZInMjHRY6c2&ts=1745027189">https://yhfx.jwznb.com/share?key=YZInMjHRY6c2&amp;ts=1745027189</a> </p><p>部署（需python3.12）</p><p>依赖包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">blinker==1.9.0</span><br><span class="line">certifi==2025.1.31</span><br><span class="line">charset-normalizer==3.4.1</span><br><span class="line">click==8.1.8</span><br><span class="line">filetype==1.2.0</span><br><span class="line">Flask==3.1.0</span><br><span class="line">idna==3.10</span><br><span class="line">itsdangerous==2.2.0</span><br><span class="line">Jinja2==3.1.6</span><br><span class="line">MarkupSafe==3.0.2</span><br><span class="line">requests==2.32.3</span><br><span class="line">urllib3==2.4.0</span><br><span class="line">Werkzeug==3.1.3</span><br></pre></td></tr></table></figure><p>部署sdkFrame</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/runoneall/sdkFrame.git</span><br><span class="line">python3 -m sdkFrame -add-origin https://dev.oneall.eu.org/ryhsdk2/map.json -update-origin -set-env YUNHU_TOKEN=云湖机器人token -set-env &#x27;SERVER=json:&#123;   1 ↵</span><br><span class="line">    &quot;host&quot;: &quot;0.0.0.0&quot;,</span><br><span class="line">    &quot;port&quot;: 端口,</span><br><span class="line">    &quot;debug&quot;: true,</span><br><span class="line">    &quot;threaded&quot;: true</span><br><span class="line">  &#125;&#x27;</span><br><span class="line">python3 -m sdkFrame -install-module SendMessage@r1a-ryhsdk2 </span><br><span class="line">python3 -m sdkFrame -install-module ServCommand@r1a-ryhsdk2 -install-module ServShortCut@r1a-ryhsdk2</span><br></pre></td></tr></table></figure><p><code>AliceAPI.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EphemeraAPI</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, api_token</span>):</span><br><span class="line">        <span class="variable language_">self</span>.EVO_API_BASE = <span class="string">&quot;https://app.alice.ws/cli/v1/Evo/&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.api_header = &#123;<span class="string">&quot;KP-APIToken&quot;</span>: api_token&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">EvoJob</span>(<span class="params">self, job_name</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.EVO_API_BASE + job_name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstanceList</span>(<span class="params">self</span>):</span><br><span class="line">        resp = requests.get(<span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Instance&quot;</span>), headers=<span class="variable language_">self</span>.api_header).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> resp[<span class="string">&quot;data&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">PlanList</span>(<span class="params">self</span>):</span><br><span class="line">        resp = requests.get(<span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Plan&quot;</span>), headers=<span class="variable language_">self</span>.api_header).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        PlanMap = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> plan <span class="keyword">in</span> resp[<span class="string">&quot;data&quot;</span>]:</span><br><span class="line">            PlanMap[plan[<span class="string">&quot;name&quot;</span>]] = plan[<span class="string">&quot;id&quot;</span>]</span><br><span class="line">        <span class="keyword">return</span> PlanMap</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">PlanOsList</span>(<span class="params">self, plan_id</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;PlanToOS&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;plan_id&quot;</span>: <span class="built_in">str</span>(plan_id)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        OSMap = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> _, osGroup <span class="keyword">in</span> resp[<span class="string">&quot;data&quot;</span>].items():</span><br><span class="line">            <span class="keyword">for</span> osItem <span class="keyword">in</span> osGroup[<span class="string">&quot;os&quot;</span>]:</span><br><span class="line">                OSMap[osItem[<span class="string">&quot;name&quot;</span>]] = osItem[<span class="string">&quot;id&quot;</span>]</span><br><span class="line">        <span class="keyword">return</span> OSMap</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstanceDeploy</span>(<span class="params">self, plan_id, os_id, hours</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Deploy&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;product_id&quot;</span>: <span class="built_in">str</span>(plan_id), <span class="string">&quot;os_id&quot;</span>: <span class="built_in">str</span>(os_id), <span class="string">&quot;time&quot;</span>: <span class="built_in">str</span>(hours)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> resp[<span class="string">&quot;data&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstanceDestroy</span>(<span class="params">self, instance_id</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Destroy&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;id&quot;</span>: <span class="built_in">str</span>(instance_id)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstancePower</span>(<span class="params">self, instance_id, action</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Power&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;id&quot;</span>: <span class="built_in">str</span>(instance_id), <span class="string">&quot;action&quot;</span>: <span class="built_in">str</span>(action)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstanceRebuild</span>(<span class="params">self, instance_id, os_id</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Rebuild&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;id&quot;</span>: <span class="built_in">str</span>(instance_id), <span class="string">&quot;os&quot;</span>: <span class="built_in">str</span>(os_id)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> resp[<span class="string">&quot;data&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstanceRenewal</span>(<span class="params">self, instance_id, hours</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Renewal&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;id&quot;</span>: <span class="built_in">str</span>(instance_id), <span class="string">&quot;time&quot;</span>: <span class="built_in">str</span>(hours)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>到 <a href="https://www.yhchat.com/control">https://www.yhchat.com/control</a> 创建机器人</p><p>快捷菜单设置（全部为普通按钮，事件推送）<br>名称随意，记录菜单id<br><img src="https://s.rmimg.com/2025-04-19/1745028339-727178-2025-04-19-100458.png" alt="Image description"></p><p>指令列表<br>添加一个普通指令和一个自定义输入指令，名称随意，记录id<br><img src="https://s.rmimg.com/2025-04-19/1745028453-377258-2025-04-19-100639.png" alt="Image description"></p><p>自定义输入表单（名称随意，记录id）<br><img src="https://s.rmimg.com/2025-04-19/1745028539-43368-2025-04-19-100819.png" alt="Image description"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Plan选项</span><br><span class="line">LAX.Evo.Micro#LAX.Evo.Standard#LAX.Evo.Pro#LAX.Evo.Ultra</span><br><span class="line"></span><br><span class="line">OS选项</span><br><span class="line">Debian 12 (Bookworm) Minimal#Debian 11 (Bullseye) Minimal#Debian 12 DevKit#Ubuntu Server 20.04 LTS Minimal#Ubuntu Server 22.04 LTS Minimal#CentOS 7 Minimal#CentOS Stream 9 Minimal#AlmaLinux 8 Minimal#AlmaLinux 9 Latest#Alpine Linux 3.19</span><br></pre></td></tr></table></figure><p><code>app.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sdkFrame</span><br><span class="line"><span class="keyword">import</span> AliceAPI</span><br><span class="line"></span><br><span class="line">sdk = sdkFrame.init()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&quot;db.json&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;db.json&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(<span class="string">&quot;&#123;&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ReadDB</span>():</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;db.json&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> json.load(f)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">WriteDB</span>(<span class="params">data_dict</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;db.json&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        json.dump(data_dict, fp=f, indent=<span class="number">2</span>, ensure_ascii=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">SetToken</span>(<span class="params">data</span>):</span><br><span class="line">    event = data[<span class="string">&quot;event&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> event[<span class="string">&quot;chat&quot;</span>][<span class="string">&quot;chatType&quot;</span>] == <span class="string">&quot;bot&quot;</span>:</span><br><span class="line">        uid = event[<span class="string">&quot;sender&quot;</span>][<span class="string">&quot;senderId&quot;</span>]</span><br><span class="line">        token = event[<span class="string">&quot;message&quot;</span>][<span class="string">&quot;content&quot;</span>][<span class="string">&quot;text&quot;</span>]</span><br><span class="line">        WriteDB(&#123;**ReadDB(), **&#123;uid: &#123;<span class="string">&quot;token&quot;</span>: token&#125;&#125;&#125;)</span><br><span class="line">        sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">f&quot;Set <span class="subst">&#123;uid&#125;</span> Token <span class="subst">&#123;token&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">InstanceConfig</span>(<span class="params">data</span>):</span><br><span class="line">    event = data[<span class="string">&quot;event&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> event[<span class="string">&quot;chat&quot;</span>][<span class="string">&quot;chatType&quot;</span>] == <span class="string">&quot;bot&quot;</span>:</span><br><span class="line">        uid = event[<span class="string">&quot;sender&quot;</span>][<span class="string">&quot;senderId&quot;</span>]</span><br><span class="line">        formJson = event[<span class="string">&quot;message&quot;</span>][<span class="string">&quot;content&quot;</span>][<span class="string">&quot;formJson&quot;</span>]</span><br><span class="line">        target_plan = formJson[<span class="string">&quot;Plan 选择框表单ID&quot;</span>][<span class="string">&quot;selectValue&quot;</span>]</span><br><span class="line">        target_os = formJson[<span class="string">&quot;OS 选择框表单ID&quot;</span>][<span class="string">&quot;selectValue&quot;</span>]</span><br><span class="line">        target_hours = formJson[<span class="string">&quot;Hours 输入框表单ID&quot;</span>][<span class="string">&quot;value&quot;</span>]</span><br><span class="line"></span><br><span class="line">        db = ReadDB()</span><br><span class="line">        <span class="keyword">if</span> uid <span class="keyword">in</span> db <span class="keyword">and</span> <span class="string">&quot;token&quot;</span> <span class="keyword">in</span> db[uid]:</span><br><span class="line">            db[uid][<span class="string">&quot;plan&quot;</span>] = target_plan</span><br><span class="line">            db[uid][<span class="string">&quot;os&quot;</span>] = target_os</span><br><span class="line">            db[uid][<span class="string">&quot;hours&quot;</span>] = target_hours</span><br><span class="line">            WriteDB(db)</span><br><span class="line">            sdk.SendMessage.Text(</span><br><span class="line">                uid,</span><br><span class="line">                <span class="string">&quot;user&quot;</span>,</span><br><span class="line">                <span class="string">f&quot;&quot;&quot;Default Config:</span></span><br><span class="line"><span class="string">- Plan: <span class="subst">&#123;target_plan&#125;</span></span></span><br><span class="line"><span class="string">- OS: <span class="subst">&#123;target_os&#125;</span></span></span><br><span class="line"><span class="string">- Hours: <span class="subst">&#123;target_hours&#125;</span>&quot;&quot;&quot;</span>,</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Set Token First&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">InstanceInfo</span>(<span class="params">data</span>):</span><br><span class="line">    event = data[<span class="string">&quot;event&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> event[<span class="string">&quot;senderType&quot;</span>] == <span class="string">&quot;user&quot;</span>:</span><br><span class="line"></span><br><span class="line">        db = ReadDB()</span><br><span class="line">        uid = event[<span class="string">&quot;senderId&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> uid <span class="keyword">not</span> <span class="keyword">in</span> db <span class="keyword">or</span> <span class="string">&quot;token&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid]:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Set Token First&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;instance_id&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid]:</span><br><span class="line">            db[uid][<span class="string">&quot;instance_id&quot;</span>] = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> db[uid][<span class="string">&quot;instance_id&quot;</span>] == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;No Instance Deployed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        instance_id = db[uid][<span class="string">&quot;instance_id&quot;</span>]</span><br><span class="line">        sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">f&quot;Checking Instance <span class="subst">&#123;instance_id&#125;</span>...&quot;</span>)</span><br><span class="line">        resp = AliceAPI.EphemeraAPI(db[uid][<span class="string">&quot;token&quot;</span>]).InstanceList()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> resp == <span class="literal">None</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Check Failed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> instance <span class="keyword">in</span> resp:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">str</span>(instance[<span class="string">&quot;id&quot;</span>]) == instance_id:</span><br><span class="line">                sdk.SendMessage.Text(</span><br><span class="line">                    uid,</span><br><span class="line">                    <span class="string">&quot;user&quot;</span>,</span><br><span class="line">                    <span class="string">f&quot;&quot;&quot;Server <span class="subst">&#123;instance_id&#125;</span>:</span></span><br><span class="line"><span class="string">- Ipv4: <span class="subst">&#123;instance[<span class="string">&quot;ipv4&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- Ipv6: <span class="subst">&#123;instance[<span class="string">&quot;ipv6&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- Hostname: <span class="subst">&#123;instance[<span class="string">&quot;hostname&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- Cpu Total: <span class="subst">&#123;instance[<span class="string">&quot;cpu&quot;</span>]&#125;</span> Core</span></span><br><span class="line"><span class="string">- Cpu Type: <span class="subst">&#123;instance[<span class="string">&quot;cpu_name&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- Memory Total: <span class="subst">&#123;instance[<span class="string">&quot;memory&quot;</span>]&#125;</span> MB</span></span><br><span class="line"><span class="string">- Disk Total: <span class="subst">&#123;instance[<span class="string">&quot;disk&quot;</span>]&#125;</span> GB</span></span><br><span class="line"><span class="string">- Disk Type: <span class="subst">&#123;instance[<span class="string">&quot;disk_type&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- User: <span class="subst">&#123;instance[<span class="string">&quot;user&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- Password: <span class="subst">&#123;instance[<span class="string">&quot;password&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- Status: <span class="subst">&#123;instance[<span class="string">&quot;status&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- Created At: <span class="subst">&#123;instance[<span class="string">&quot;creation_at&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- Expired At: <span class="subst">&#123;instance[<span class="string">&quot;expiration_at&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- Plan: <span class="subst">&#123;instance[<span class="string">&quot;plan&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- Region: <span class="subst">&#123;instance[<span class="string">&quot;region&quot;</span>]&#125;</span></span></span><br><span class="line"><span class="string">- OS: <span class="subst">&#123;instance[<span class="string">&quot;os&quot;</span>]&#125;</span>&quot;&quot;&quot;</span>,</span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">InstanceDeploy</span>(<span class="params">data</span>):</span><br><span class="line">    event = data[<span class="string">&quot;event&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> event[<span class="string">&quot;senderType&quot;</span>] == <span class="string">&quot;user&quot;</span>:</span><br><span class="line"></span><br><span class="line">        db = ReadDB()</span><br><span class="line">        uid = event[<span class="string">&quot;senderId&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> uid <span class="keyword">not</span> <span class="keyword">in</span> db <span class="keyword">or</span> <span class="string">&quot;token&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid]:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Set Token First&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;plan&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid] <span class="keyword">or</span> <span class="string">&quot;os&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid] <span class="keyword">or</span> <span class="string">&quot;hours&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid]:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Set Default Config First&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;instance_id&quot;</span> <span class="keyword">in</span> db[uid] <span class="keyword">and</span> db[uid][<span class="string">&quot;instance_id&quot;</span>] != <span class="string">&quot;&quot;</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Instance Already Deployed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Deploying Instance...&quot;</span>)</span><br><span class="line">        target_plan = db[uid][<span class="string">&quot;plan&quot;</span>]</span><br><span class="line">        target_os = db[uid][<span class="string">&quot;os&quot;</span>]</span><br><span class="line">        target_hours = db[uid][<span class="string">&quot;hours&quot;</span>]</span><br><span class="line"></span><br><span class="line">        Ephemera = AliceAPI.EphemeraAPI(db[uid][<span class="string">&quot;token&quot;</span>])</span><br><span class="line">        plans = Ephemera.PlanList()</span><br><span class="line">        oss = Ephemera.PlanOsList(plans[target_plan])</span><br><span class="line">        resp = Ephemera.InstanceDeploy(</span><br><span class="line">            Ephemera.PlanList()[target_plan], oss[target_os], hours=<span class="built_in">int</span>(target_hours)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> resp == <span class="literal">None</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Deploy Failed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        db[uid][<span class="string">&quot;instance_id&quot;</span>] = <span class="built_in">str</span>(resp[<span class="string">&quot;id&quot;</span>])</span><br><span class="line">        WriteDB(db)</span><br><span class="line">        sdk.SendMessage.Text(</span><br><span class="line">            uid,</span><br><span class="line">            <span class="string">&quot;user&quot;</span>,</span><br><span class="line">            <span class="string">f&quot;Instance <span class="subst">&#123;resp[<span class="string">&#x27;id&#x27;</span>]&#125;</span> Deployed, Please Wait for 2-3 minutes, Use Info Button to Check Status&quot;</span>,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">InstanceDestroy</span>(<span class="params">data</span>):</span><br><span class="line">    event = data[<span class="string">&quot;event&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> event[<span class="string">&quot;senderType&quot;</span>] == <span class="string">&quot;user&quot;</span>:</span><br><span class="line"></span><br><span class="line">        db = ReadDB()</span><br><span class="line">        uid = event[<span class="string">&quot;senderId&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> uid <span class="keyword">not</span> <span class="keyword">in</span> db <span class="keyword">or</span> <span class="string">&quot;token&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid]:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Set Token First&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;instance_id&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid] <span class="keyword">or</span> db[uid][<span class="string">&quot;instance_id&quot;</span>] == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;No Instance Deployed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        instance_id = db[uid][<span class="string">&quot;instance_id&quot;</span>]</span><br><span class="line">        sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">f&quot;Destroying Instance <span class="subst">&#123;instance_id&#125;</span>...&quot;</span>)</span><br><span class="line"></span><br><span class="line">        resp = AliceAPI.EphemeraAPI(db[uid][<span class="string">&quot;token&quot;</span>]).InstanceDestroy(instance_id)</span><br><span class="line">        <span class="keyword">if</span> resp == <span class="literal">False</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Destroy Failed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">del</span> db[uid][<span class="string">&quot;instance_id&quot;</span>]</span><br><span class="line">        WriteDB(db)</span><br><span class="line">        sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">f&quot;Instance <span class="subst">&#123;instance_id&#125;</span> Destroyed&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">power_action</span>(<span class="params">data, action</span>):</span><br><span class="line">    event = data[<span class="string">&quot;event&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> event[<span class="string">&quot;senderType&quot;</span>] == <span class="string">&quot;user&quot;</span>:</span><br><span class="line"></span><br><span class="line">        db = ReadDB()</span><br><span class="line">        uid = event[<span class="string">&quot;senderId&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> uid <span class="keyword">not</span> <span class="keyword">in</span> db <span class="keyword">or</span> <span class="string">&quot;token&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid]:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Set Token First&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;instance_id&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid] <span class="keyword">or</span> db[uid][<span class="string">&quot;instance_id&quot;</span>] == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;No Instance Deployed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        instance_id = db[uid][<span class="string">&quot;instance_id&quot;</span>]</span><br><span class="line">        sdk.SendMessage.Text(</span><br><span class="line">            uid, <span class="string">&quot;user&quot;</span>, <span class="string">f&quot;Performing <span class="subst">&#123;action&#125;</span> on Instance <span class="subst">&#123;instance_id&#125;</span>...&quot;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        resp = AliceAPI.EphemeraAPI(db[uid][<span class="string">&quot;token&quot;</span>]).InstancePower(instance_id, action)</span><br><span class="line">        <span class="keyword">if</span> resp == <span class="literal">False</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">f&quot;<span class="subst">&#123;action&#125;</span> Failed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">f&quot;Instance <span class="subst">&#123;instance_id&#125;</span> <span class="subst">&#123;action&#125;</span>ed&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">InstanceBoot</span>(<span class="params">data</span>):</span><br><span class="line">    power_action(data, <span class="string">&quot;boot&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">InstanceShutdown</span>(<span class="params">data</span>):</span><br><span class="line">    power_action(data, <span class="string">&quot;shutdown&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">InstanceRestart</span>(<span class="params">data</span>):</span><br><span class="line">    power_action(data, <span class="string">&quot;restart&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">InstancePoweroff</span>(<span class="params">data</span>):</span><br><span class="line">    power_action(data, <span class="string">&quot;poweroff&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">InstanceRebuild</span>(<span class="params">data</span>):</span><br><span class="line">    event = data[<span class="string">&quot;event&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> event[<span class="string">&quot;senderType&quot;</span>] == <span class="string">&quot;user&quot;</span>:</span><br><span class="line"></span><br><span class="line">        db = ReadDB()</span><br><span class="line">        uid = event[<span class="string">&quot;senderId&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> uid <span class="keyword">not</span> <span class="keyword">in</span> db <span class="keyword">or</span> <span class="string">&quot;token&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid]:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Set Token First&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;plan&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid] <span class="keyword">or</span> <span class="string">&quot;os&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid]:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Set Default Config First&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;instance_id&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid] <span class="keyword">or</span> db[uid][<span class="string">&quot;instance_id&quot;</span>] == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;No Instance Deployed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        instance_id = db[uid][<span class="string">&quot;instance_id&quot;</span>]</span><br><span class="line">        sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">f&quot;Rebuilding Instance <span class="subst">&#123;instance_id&#125;</span>...&quot;</span>)</span><br><span class="line"></span><br><span class="line">        Ephemera = AliceAPI.EphemeraAPI(db[uid][<span class="string">&quot;token&quot;</span>])</span><br><span class="line">        plans = Ephemera.PlanList()</span><br><span class="line">        oss = Ephemera.PlanOsList(plans[db[uid][<span class="string">&quot;plan&quot;</span>]])</span><br><span class="line">        resp = Ephemera.InstanceRebuild(instance_id, oss[db[uid][<span class="string">&quot;os&quot;</span>]])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> resp == <span class="literal">False</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Rebuild Failed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">f&quot;Instance <span class="subst">&#123;instance_id&#125;</span> Rebuilt&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">InstanceRenewal</span>(<span class="params">data</span>):</span><br><span class="line">    event = data[<span class="string">&quot;event&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> event[<span class="string">&quot;senderType&quot;</span>] == <span class="string">&quot;user&quot;</span>:</span><br><span class="line"></span><br><span class="line">        db = ReadDB()</span><br><span class="line">        uid = event[<span class="string">&quot;senderId&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> uid <span class="keyword">not</span> <span class="keyword">in</span> db <span class="keyword">or</span> <span class="string">&quot;token&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid]:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Set Token First&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;instance_id&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> db[uid] <span class="keyword">or</span> db[uid][<span class="string">&quot;instance_id&quot;</span>] == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;No Instance Deployed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        instance_id = db[uid][<span class="string">&quot;instance_id&quot;</span>]</span><br><span class="line">        sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">f&quot;Renewing Instance <span class="subst">&#123;instance_id&#125;</span>...&quot;</span>)</span><br><span class="line"></span><br><span class="line">        target_hours = db[uid][<span class="string">&quot;hours&quot;</span>]</span><br><span class="line">        resp = AliceAPI.EphemeraAPI(db[uid][<span class="string">&quot;token&quot;</span>]).InstanceRenewal(</span><br><span class="line">            instance_id, <span class="built_in">int</span>(target_hours)</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> resp == <span class="literal">False</span>:</span><br><span class="line">            sdk.SendMessage.Text(uid, <span class="string">&quot;user&quot;</span>, <span class="string">&quot;Renewal Failed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        sdk.SendMessage.Text(</span><br><span class="line">            uid, <span class="string">&quot;user&quot;</span>, <span class="string">f&quot;Instance <span class="subst">&#123;instance_id&#125;</span> Renewed <span class="subst">&#123;target_hours&#125;</span> hours&quot;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sdk.ServCommand.AddHandle(SetToken, <span class="type">Set</span> Token 指令ID)</span><br><span class="line">sdk.ServCommand.AddHandle(InstanceConfig, Default Config 指令ID)</span><br><span class="line">sdk.ServShortCut.AddHandle(InstanceInfo, <span class="string">&quot;Info 菜单ID&quot;</span>)</span><br><span class="line">sdk.ServShortCut.AddHandle(InstanceDeploy, <span class="string">&quot;Deploy 菜单ID&quot;</span>)</span><br><span class="line">sdk.ServShortCut.AddHandle(InstanceDestroy, <span class="string">&quot;Destroy 菜单ID&quot;</span>)</span><br><span class="line">sdk.ServShortCut.AddHandle(InstanceBoot, <span class="string">&quot;Boot 菜单ID&quot;</span>)</span><br><span class="line">sdk.ServShortCut.AddHandle(InstanceShutdown, <span class="string">&quot;Shutdown 菜单ID&quot;</span>)</span><br><span class="line">sdk.ServShortCut.AddHandle(InstanceRestart, <span class="string">&quot;Restart 菜单ID&quot;</span>)</span><br><span class="line">sdk.ServShortCut.AddHandle(InstancePoweroff, <span class="string">&quot;Poweroff 菜单ID&quot;</span>)</span><br><span class="line">sdk.ServShortCut.AddHandle(InstanceRebuild, <span class="string">&quot;Rebuild 菜单ID&quot;</span>)</span><br><span class="line">sdk.ServShortCut.AddHandle(InstanceRenewal, <span class="string">&quot;Renewal 菜单ID&quot;</span>)</span><br><span class="line">sdk.Server.AddTrigger(sdk.ServCommand)</span><br><span class="line">sdk.Server.AddTrigger(sdk.ServShortCut)</span><br><span class="line"></span><br><span class="line">sdk.Server.Start()</span><br></pre></td></tr></table></figure><p>启动后填入到 <code>配置消息订阅接口</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;云湖机器人（需下载云湖APP）&lt;/p&gt;
&lt;p&gt;效果图：&lt;br&gt;&lt;img src=&quot;https://s.rmimg.com/2025-04-19/1745027138-305955-2025-04-19-093942.png&quot; alt=&quot;Image description&quot;&gt;</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>AliceNetwork开发者云API封装</title>
    <link href="https://blog.oneall.eu.org/2025/04/13/AliceNetwork%E5%BC%80%E5%8F%91%E8%80%85%E4%BA%91API%E5%B0%81%E8%A3%85/"/>
    <id>https://blog.oneall.eu.org/2025/04/13/AliceNetwork%E5%BC%80%E5%8F%91%E8%80%85%E4%BA%91API%E5%B0%81%E8%A3%85/</id>
    <published>2025-04-13T04:59:07.000Z</published>
    <updated>2025-04-13T04:59:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>AliceAPI.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EphemeraAPI</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, api_token</span>):</span><br><span class="line">        <span class="variable language_">self</span>.EVO_API_BASE = <span class="string">&quot;https://app.alice.ws/cli/v1/Evo/&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.api_header = &#123;<span class="string">&quot;KP-APIToken&quot;</span>: api_token&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">EvoJob</span>(<span class="params">self, job_name</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.EVO_API_BASE + job_name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstanceList</span>(<span class="params">self</span>):</span><br><span class="line">        resp = requests.get(<span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Instance&quot;</span>), headers=<span class="variable language_">self</span>.api_header).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> resp[<span class="string">&quot;data&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">PlanList</span>(<span class="params">self</span>):</span><br><span class="line">        resp = requests.get(<span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Plan&quot;</span>), headers=<span class="variable language_">self</span>.api_header).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        PlanMap = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> plan <span class="keyword">in</span> resp[<span class="string">&quot;data&quot;</span>]:</span><br><span class="line">            PlanMap[plan[<span class="string">&quot;name&quot;</span>]] = plan[<span class="string">&quot;id&quot;</span>]</span><br><span class="line">        <span class="keyword">return</span> PlanMap</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">PlanOsList</span>(<span class="params">self, plan_id</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;PlanToOS&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;plan_id&quot;</span>: <span class="built_in">str</span>(plan_id)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        OSMap = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> _, osGroup <span class="keyword">in</span> resp[<span class="string">&quot;data&quot;</span>].items():</span><br><span class="line">            <span class="keyword">for</span> osItem <span class="keyword">in</span> osGroup[<span class="string">&quot;os&quot;</span>]:</span><br><span class="line">                OSMap[osItem[<span class="string">&quot;name&quot;</span>]] = osItem[<span class="string">&quot;id&quot;</span>]</span><br><span class="line">        <span class="keyword">return</span> OSMap</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstanceDeploy</span>(<span class="params">self, plan_id, os_id, hours</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Deploy&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;product_id&quot;</span>: <span class="built_in">str</span>(plan_id), <span class="string">&quot;os_id&quot;</span>: <span class="built_in">str</span>(os_id), <span class="string">&quot;time&quot;</span>: <span class="built_in">str</span>(hours)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> resp[<span class="string">&quot;data&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstanceDestroy</span>(<span class="params">self, instance_id</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Destroy&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;id&quot;</span>: <span class="built_in">str</span>(instance_id)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstancePower</span>(<span class="params">self, instance_id, action</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Power&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;id&quot;</span>: <span class="built_in">str</span>(instance_id), <span class="string">&quot;action&quot;</span>: <span class="built_in">str</span>(action)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstanceRebuild</span>(<span class="params">self, instance_id, os_id</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Rebuild&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;id&quot;</span>: <span class="built_in">str</span>(instance_id), <span class="string">&quot;os&quot;</span>: <span class="built_in">str</span>(os_id)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> resp[<span class="string">&quot;data&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">InstanceRenewal</span>(<span class="params">self, instance_id, hours</span>):</span><br><span class="line">        resp = requests.post(</span><br><span class="line">            <span class="variable language_">self</span>.EvoJob(<span class="string">&quot;Renewal&quot;</span>),</span><br><span class="line">            headers=<span class="variable language_">self</span>.api_header,</span><br><span class="line">            data=&#123;<span class="string">&quot;id&quot;</span>: <span class="built_in">str</span>(instance_id), <span class="string">&quot;time&quot;</span>: <span class="built_in">str</span>(hours)&#125;,</span><br><span class="line">        ).json()</span><br><span class="line">        <span class="keyword">if</span> resp[<span class="string">&quot;status&quot;</span>] != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>从 <a href="https://app.alice.ws/ephemera/console">控制台</a> 获取 <code>API Token</code><br>在同级目录新建 <code>kp-api-token.txt</code> 并写入token</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> AliceAPI <span class="keyword">import</span> EphemeraAPI</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">GetApiToken</span>():</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;kp-api-token.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> token_file:</span><br><span class="line">        api_token = token_file.read()</span><br><span class="line">    <span class="keyword">return</span> api_token</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Ephemera = EphemeraAPI(GetApiToken())</span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------</span></span><br><span class="line"><span class="comment"># InstanceList</span></span><br><span class="line"><span class="built_in">print</span>(Ephemera.InstanceList())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------</span></span><br><span class="line"><span class="comment"># PlanList</span></span><br><span class="line"><span class="built_in">print</span>(Ephemera.PlanList())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------</span></span><br><span class="line"><span class="comment"># PlanOsList</span></span><br><span class="line">plans = Ephemera.PlanList()</span><br><span class="line"><span class="built_in">print</span>(Ephemera.PlanOsList(plans[<span class="string">&quot;LAX.Evo.Micro&quot;</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------</span></span><br><span class="line"><span class="comment"># InstanceDeploy</span></span><br><span class="line">plans = Ephemera.PlanList()</span><br><span class="line">oss = Ephemera.PlanOsList(plans[<span class="string">&quot;LAX.Evo.Micro&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(</span><br><span class="line">    Ephemera.InstanceDeploy(</span><br><span class="line">        plans[<span class="string">&quot;LAX.Evo.Micro&quot;</span>], oss[<span class="string">&quot;Debian 12 (Bookworm) Minimal&quot;</span>], hours=<span class="number">1</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------</span></span><br><span class="line"><span class="comment"># InstanceDestroy</span></span><br><span class="line">plans = Ephemera.PlanList()</span><br><span class="line">oss = Ephemera.PlanOsList(plans[<span class="string">&quot;LAX.Evo.Micro&quot;</span>])</span><br><span class="line">instance_id = Ephemera.InstanceDeploy(</span><br><span class="line">    plans[<span class="string">&quot;LAX.Evo.Micro&quot;</span>], oss[<span class="string">&quot;Debian 12 (Bookworm) Minimal&quot;</span>], hours=<span class="number">1</span></span><br><span class="line">)[<span class="string">&quot;id&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(Ephemera.InstanceDestroy(instance_id))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------</span></span><br><span class="line"><span class="comment"># InstancePower</span></span><br><span class="line">plans = Ephemera.PlanList()</span><br><span class="line">oss = Ephemera.PlanOsList(plans[<span class="string">&quot;LAX.Evo.Micro&quot;</span>])</span><br><span class="line">instance_id = Ephemera.InstanceDeploy(</span><br><span class="line">    plans[<span class="string">&quot;LAX.Evo.Micro&quot;</span>], oss[<span class="string">&quot;Debian 12 (Bookworm) Minimal&quot;</span>], hours=<span class="number">1</span></span><br><span class="line">)[<span class="string">&quot;id&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(Ephemera.InstancePower(instance_id, <span class="string">&quot;boot&quot;</span>))  <span class="comment"># boot shutdown restart poweroff</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------</span></span><br><span class="line"><span class="comment"># InstanceRebuild</span></span><br><span class="line">plans = Ephemera.PlanList()</span><br><span class="line">oss = Ephemera.PlanOsList(plans[<span class="string">&quot;LAX.Evo.Micro&quot;</span>])</span><br><span class="line">instance_id = Ephemera.InstanceDeploy(</span><br><span class="line">    plans[<span class="string">&quot;LAX.Evo.Micro&quot;</span>], oss[<span class="string">&quot;Debian 12 (Bookworm) Minimal&quot;</span>], hours=<span class="number">1</span></span><br><span class="line">)[<span class="string">&quot;id&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(Ephemera.InstanceRebuild(instance_id, oss[<span class="string">&quot;AlmaLinux 9 Latest&quot;</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------------</span></span><br><span class="line"><span class="comment"># InstanceRenewal</span></span><br><span class="line">plans = Ephemera.PlanList()</span><br><span class="line">oss = Ephemera.PlanOsList(plans[<span class="string">&quot;LAX.Evo.Micro&quot;</span>])</span><br><span class="line">instance_id = Ephemera.InstanceDeploy(</span><br><span class="line">    plans[<span class="string">&quot;LAX.Evo.Micro&quot;</span>], oss[<span class="string">&quot;Debian 12 (Bookworm) Minimal&quot;</span>], hours=<span class="number">1</span></span><br><span class="line">)[<span class="string">&quot;id&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(Ephemera.InstanceRenewal(instance_id, hours=<span class="number">1</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;AliceAPI.py&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>低版本mac装docker</title>
    <link href="https://blog.oneall.eu.org/2025/04/09/%E4%BD%8E%E7%89%88%E6%9C%ACmac%E8%A3%85docker/"/>
    <id>https://blog.oneall.eu.org/2025/04/09/%E4%BD%8E%E7%89%88%E6%9C%ACmac%E8%A3%85docker/</id>
    <published>2025-04-09T08:35:35.000Z</published>
    <updated>2025-04-09T08:35:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>翻到台mac mini，运行macOS 10.15，已经不支持安装docker GUI了</p><p>首先安装brew</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>安装docker cli</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install docker docker-compose</span><br></pre></td></tr></table></figure><p>安装colima做docker后端</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install colima</span><br></pre></td></tr></table></figure><p>编译安装qemu（我用的7.2.0）</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">brew install pkg-config glib pixman ninja cmake wget sdl2 lzo</span><br><span class="line">wget https://download.qemu.org/qemu-7.2.0.tar.xz</span><br><span class="line">tar -xf qemu-7.2.0.tar.xz</span><br><span class="line"><span class="built_in">rm</span> qemu-7.2.0.tar.xz &amp;&amp; <span class="built_in">cd</span> qemu-7.2.0</span><br><span class="line">./configure --target-list=x86_64-softmmu,aarch64-softmmu --enable-debug --enable-sdl --enable-vnc</span><br><span class="line">make -j$(sysctl -n hw.logicalcpu)</span><br><span class="line"><span class="built_in">sudo</span> make install</span><br><span class="line"><span class="built_in">cd</span> .. &amp;&amp; <span class="built_in">rm</span> -rf qemu-7.2.0</span><br><span class="line">qemu-system-x86_64 --version</span><br></pre></td></tr></table></figure><p>启动colima</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">colima start  <span class="comment"># 后面看着给 --cpu 核心数 --memory 内存(GB)</span></span><br></pre></td></tr></table></figure><p>运行 <code>docker ps</code> 查看是否安装成功（列表可能为空，无报错就是成功了）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;翻到台mac mini，运行macOS 10.15，已经不支持安装docker GUI了&lt;/p&gt;
&lt;p&gt;首先安装brew&lt;/p&gt;
&lt;figure class=&quot;highlight zsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>基于深度学习的离线tts和stt的python实现</title>
    <link href="https://blog.oneall.eu.org/2025/04/06/%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%A6%BB%E7%BA%BFtts%E5%92%8Cstt%E7%9A%84python%E5%AE%9E%E7%8E%B0/"/>
    <id>https://blog.oneall.eu.org/2025/04/06/%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%A6%BB%E7%BA%BFtts%E5%92%8Cstt%E7%9A%84python%E5%AE%9E%E7%8E%B0/</id>
    <published>2025-04-06T05:05:00.000Z</published>
    <updated>2025-04-06T05:09:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>安装模型（stt用的vosk-model-cn-0.22，tts用的kokoro-v1.1-zh）</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vosk-model-cn-0.22</span></span><br><span class="line">wget https://alphacephei.com/vosk/models/vosk-model-cn-0.22.zip</span><br><span class="line">unzip vosk-model-cn-0.22.zip</span><br><span class="line"><span class="built_in">rm</span> vosk-model-cn-0.22.zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># kokoro-v1.1-zh</span></span><br><span class="line"><span class="built_in">mkdir</span> kokoro-v1.1-zh</span><br><span class="line"><span class="built_in">cd</span> kokoro-v1.1-zh</span><br><span class="line">wget https://github.com/thewh1teagle/kokoro-onnx/releases/download/model-files-v1.1/kokoro-v1.1-zh.onnx</span><br><span class="line">wget https://github.com/thewh1teagle/kokoro-onnx/releases/download/model-files-v1.1/voices-v1.1-zh.bin</span><br><span class="line">wget https://huggingface.co/hexgrad/Kokoro-82M-v1.1-zh/raw/main/config.json</span><br><span class="line"><span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure><p>安装依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">addict==2.4.0</span><br><span class="line">annotated-types==0.7.0</span><br><span class="line">anyio==4.9.0</span><br><span class="line">attrs==25.3.0</span><br><span class="line">babel==2.17.0</span><br><span class="line">certifi==2025.1.31</span><br><span class="line">cffi==1.17.1</span><br><span class="line">charset-normalizer==3.4.1</span><br><span class="line">cn2an==0.5.23</span><br><span class="line">colorama==0.4.6</span><br><span class="line">coloredlogs==15.0.1</span><br><span class="line">colorlog==6.9.0</span><br><span class="line">csvw==3.5.1</span><br><span class="line">distro==1.9.0</span><br><span class="line">dlinfo==2.0.0</span><br><span class="line">espeakng-loader==0.2.4</span><br><span class="line">exceptiongroup==1.2.2</span><br><span class="line">flatbuffers==25.2.10</span><br><span class="line">h11==0.14.0</span><br><span class="line">httpcore==1.0.7</span><br><span class="line">httpx==0.28.1</span><br><span class="line">humanfriendly==10.0</span><br><span class="line">idna==3.10</span><br><span class="line">isodate==0.7.2</span><br><span class="line">jieba==0.42.1</span><br><span class="line">jiter==0.9.0</span><br><span class="line">joblib==1.4.2</span><br><span class="line">jsonschema==4.23.0</span><br><span class="line">jsonschema-specifications==2024.10.1</span><br><span class="line">kokoro-onnx==0.4.7</span><br><span class="line">language-tags==1.2.0</span><br><span class="line">misaki==0.9.3</span><br><span class="line">mpmath==1.3.0</span><br><span class="line">numpy==2.2.4</span><br><span class="line">onnxruntime==1.21.0</span><br><span class="line">openai==1.70.0</span><br><span class="line">ordered-set==4.1.0</span><br><span class="line">packaging==24.2</span><br><span class="line">phonemizer-fork==3.3.1</span><br><span class="line">proces==0.1.7</span><br><span class="line">protobuf==6.30.2</span><br><span class="line">PyAudio==0.2.14</span><br><span class="line">pycparser==2.22</span><br><span class="line">pydantic==2.11.2</span><br><span class="line">pydantic_core==2.33.1</span><br><span class="line">pyparsing==3.2.3</span><br><span class="line">pypinyin==0.54.0</span><br><span class="line">pypinyin-dict==0.9.0</span><br><span class="line">python-dateutil==2.9.0.post0</span><br><span class="line">rdflib==7.1.4</span><br><span class="line">referencing==0.36.2</span><br><span class="line">regex==2024.11.6</span><br><span class="line">requests==2.32.3</span><br><span class="line">rfc3986==1.5.0</span><br><span class="line">rpds-py==0.24.0</span><br><span class="line">segments==2.3.0</span><br><span class="line">six==1.17.0</span><br><span class="line">sniffio==1.3.1</span><br><span class="line">sounddevice==0.5.1</span><br><span class="line">srt==3.5.3</span><br><span class="line">sympy==1.13.3</span><br><span class="line">tqdm==4.67.1</span><br><span class="line">typing-inspection==0.4.0</span><br><span class="line">typing_extensions==4.13.1</span><br><span class="line">uritemplate==4.1.1</span><br><span class="line">urllib3==2.3.0</span><br><span class="line">vosk==0.3.44</span><br><span class="line">websockets==15.0.1</span><br></pre></td></tr></table></figure><p>tts.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sounddevice <span class="keyword">as</span> sd</span><br><span class="line"><span class="keyword">import</span> kokoro_onnx <span class="keyword">as</span> kokoro</span><br><span class="line"><span class="keyword">from</span> misaki <span class="keyword">import</span> zh</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"></span><br><span class="line">kokoro.MAX_PHONEME_LENGTH = <span class="number">80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TTS</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.g2p = zh.ZHG2P(version=<span class="string">&quot;1.1&quot;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.voice = <span class="string">&quot;zm_009&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.speed = <span class="number">1.0</span></span><br><span class="line">        <span class="variable language_">self</span>.model = kokoro.Kokoro(</span><br><span class="line">            <span class="string">&quot;kokoro-v1.1-zh/model.onnx&quot;</span>,</span><br><span class="line">            <span class="string">&quot;kokoro-v1.1-zh/voices.bin&quot;</span>,</span><br><span class="line">            vocab_config=<span class="string">&quot;kokoro-v1.1-zh/config.json&quot;</span>,</span><br><span class="line">        )</span><br><span class="line">        <span class="variable language_">self</span>.model.create(</span><br><span class="line">            <span class="variable language_">self</span>.get_phonemes(<span class="string">&quot;你好，世界！&quot;</span>),</span><br><span class="line">            voice=<span class="variable language_">self</span>.voice,</span><br><span class="line">            speed=<span class="variable language_">self</span>.speed,</span><br><span class="line">            is_phonemes=<span class="literal">True</span>,</span><br><span class="line">        )</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;TTS initialized&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_speed</span>(<span class="params">self, speed: <span class="built_in">float</span> = <span class="number">1.0</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.speed = speed</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_phonemes</span>(<span class="params">self, text: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        phonemes, _ = <span class="variable language_">self</span>.g2p(text)</span><br><span class="line">        <span class="keyword">return</span> phonemes</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self, text: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">stream_audio</span>():</span><br><span class="line">            stream = <span class="variable language_">self</span>.model.create_stream(</span><br><span class="line">                <span class="variable language_">self</span>.get_phonemes(text),</span><br><span class="line">                voice=<span class="variable language_">self</span>.voice,</span><br><span class="line">                speed=<span class="variable language_">self</span>.speed,</span><br><span class="line">                is_phonemes=<span class="literal">True</span>,</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">async</span> <span class="keyword">for</span> audio, audio_rate <span class="keyword">in</span> stream:</span><br><span class="line">                sd.play(audio, audio_rate)</span><br><span class="line">                sd.wait()</span><br><span class="line"></span><br><span class="line">        asyncio.run(stream_audio())</span><br></pre></td></tr></table></figure><p>stt.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> vosk</span><br><span class="line"><span class="keyword">import</span> pyaudio</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">STT</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.recognizer = vosk.KaldiRecognizer(vosk.Model(<span class="string">&quot;vosk-model-cn-0.22&quot;</span>), <span class="number">16000</span>)</span><br><span class="line">        <span class="variable language_">self</span>.mic = pyaudio.PyAudio()</span><br><span class="line">        <span class="variable language_">self</span>.stream = <span class="variable language_">self</span>.mic.<span class="built_in">open</span>(</span><br><span class="line">            <span class="built_in">format</span>=pyaudio.paInt16,</span><br><span class="line">            channels=<span class="number">1</span>,</span><br><span class="line">            rate=<span class="number">16000</span>,</span><br><span class="line">            <span class="built_in">input</span>=<span class="literal">True</span>,</span><br><span class="line">            frames_per_buffer=<span class="number">4096</span>,</span><br><span class="line">        )</span><br><span class="line">        <span class="variable language_">self</span>.stop_listening = <span class="literal">False</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;STT initialized&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">listen</span>(<span class="params">self, on_result: <span class="built_in">callable</span></span>):</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> <span class="variable language_">self</span>.stop_listening:</span><br><span class="line">            <span class="keyword">if</span> <span class="variable language_">self</span>.recognizer.AcceptWaveform(</span><br><span class="line">                <span class="variable language_">self</span>.stream.read(<span class="number">4096</span>, exception_on_overflow=<span class="literal">False</span>)</span><br><span class="line">            ):</span><br><span class="line">                result = json.loads(<span class="variable language_">self</span>.recognizer.Result())</span><br><span class="line">                text: <span class="built_in">str</span> = result.get(<span class="string">&quot;text&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> text:</span><br><span class="line">                    on_result(text.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">        <span class="variable language_">self</span>.stream.stop_stream()</span><br><span class="line">        <span class="variable language_">self</span>.stream.close()</span><br><span class="line">        <span class="variable language_">self</span>.mic.terminate()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">stop</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.stop_listening = <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>用法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tts</span><br><span class="line"><span class="keyword">import</span> stt</span><br><span class="line"></span><br><span class="line">tts_engine = tts.TTS()</span><br><span class="line">stt_engine = stt.STT()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">call</span>(<span class="params">text: <span class="built_in">str</span></span>):</span><br><span class="line">    tts_engine.speak(text)</span><br><span class="line">    <span class="comment"># your logic</span></span><br><span class="line">    <span class="comment">#stt_engine.stop()  # stop mic listen</span></span><br><span class="line"></span><br><span class="line">stt_engine.listen(call)  <span class="comment"># start mic listen</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;安装模型（stt用的vosk-model-cn-0.22，tts用的kokoro-v1.1-zh）&lt;/p&gt;
&lt;figure class=&quot;highlight zsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>vercel搭建跨域API</title>
    <link href="https://blog.oneall.eu.org/2025/03/23/vercel%E6%90%AD%E5%BB%BA%E8%B7%A8%E5%9F%9FAPI/"/>
    <id>https://blog.oneall.eu.org/2025/03/23/vercel%E6%90%AD%E5%BB%BA%E8%B7%A8%E5%9F%9FAPI/</id>
    <published>2025-03-23T07:34:00.000Z</published>
    <updated>2025-03-24T12:05:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用 <code>vercel edge function</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> runtime = <span class="string">&#x27;edge&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleRequest</span>(<span class="params"><span class="attr">req</span>: <span class="title class_">Request</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(req.<span class="property">url</span>);</span><br><span class="line">    <span class="keyword">const</span> targetUrl = <span class="built_in">decodeURIComponent</span>(url.<span class="property">search</span>).<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="attr">reqInit</span>: <span class="title class_">RequestInit</span> &amp; &#123; <span class="attr">duplex</span>?: <span class="built_in">string</span> &#125; = &#123;</span><br><span class="line">        <span class="attr">headers</span>: req.<span class="property">headers</span>,</span><br><span class="line">        <span class="attr">method</span>: req.<span class="property">method</span>,</span><br><span class="line">        <span class="attr">body</span>: req.<span class="property">body</span>,</span><br><span class="line">        <span class="attr">redirect</span>: <span class="string">&#x27;follow&#x27;</span>,</span><br><span class="line">        <span class="attr">duplex</span>: <span class="string">&#x27;half&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> modifiedRequest = <span class="keyword">new</span> <span class="title class_">Request</span>(targetUrl, reqInit);</span><br><span class="line">    <span class="keyword">const</span> resp = <span class="keyword">await</span> <span class="title function_">fetch</span>(modifiedRequest);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(resp.<span class="property">body</span>, &#123;</span><br><span class="line">        <span class="attr">status</span>: resp.<span class="property">status</span>,</span><br><span class="line">        <span class="attr">statusText</span>: resp.<span class="property">statusText</span>,</span><br><span class="line">        <span class="attr">headers</span>: <span class="keyword">new</span> <span class="title class_">Headers</span>(&#123;</span><br><span class="line">            ...resp.<span class="property">headers</span>,</span><br><span class="line">            <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-store&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>: <span class="string">&#x27;GET, POST, PUT, DELETE, PATCH, OPTIONS&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>: <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">GET</span> = handleRequest;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">POST</span> = handleRequest;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">PUT</span> = handleRequest;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">DELETE</span> = handleRequest;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">PATCH</span> = handleRequest;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">OPTIONS</span> = handleRequest;</span><br></pre></td></tr></table></figure><p>保存为 <code>vap.ts</code> (名称随意)<br>API地址: <code>&lt;域名&gt;/api/&lt;保存名称&gt;?&lt;目标URL&gt;</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用 &lt;code&gt;vercel edge function&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/sp</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>整活成真的了!</title>
    <link href="https://blog.oneall.eu.org/2025/03/18/%E6%95%B4%E6%B4%BB%E6%88%90%E7%9C%9F%E7%9A%84%E4%BA%86-/"/>
    <id>https://blog.oneall.eu.org/2025/03/18/%E6%95%B4%E6%B4%BB%E6%88%90%E7%9C%9F%E7%9A%84%E4%BA%86-/</id>
    <published>2025-03-18T15:45:00.000Z</published>
    <updated>2025-03-24T00:16:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s.rmimg.com/2025-03-18/1742308936-745290-renderedimage.jpg" alt="Image description"><br><img src="https://s.rmimg.com/2025-03-19/1742347706-834125-1742308966-280949-2025-03-18-224237.png" alt="Image description"></p><p>声明 <code>nic.xh.sd</code> 为本人整活所写，跟NodeLoc论坛无任何关系</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s.rmimg.com/2025-03-18/1742308936-745290-renderedimage.jpg&quot; alt=&quot;Image description&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://s.rmimg.com/2</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>查看博客友链最新更新了什么?</title>
    <link href="https://blog.oneall.eu.org/2025/03/18/%E6%9F%A5%E7%9C%8B%E5%8D%9A%E5%AE%A2%E5%8F%8B%E9%93%BE%E6%9C%80%E6%96%B0%E6%9B%B4%E6%96%B0%E4%BA%86%E4%BB%80%E4%B9%88-/"/>
    <id>https://blog.oneall.eu.org/2025/03/18/%E6%9F%A5%E7%9C%8B%E5%8D%9A%E5%AE%A2%E5%8F%8B%E9%93%BE%E6%9C%80%E6%96%B0%E6%9B%B4%E6%96%B0%E4%BA%86%E4%BB%80%E4%B9%88-/</id>
    <published>2025-03-18T02:53:00.000Z</published>
    <updated>2025-03-18T02:56:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>这是对 <a href="https://dev.oneall.eu.org/archives/32/">https://dev.oneall.eu.org/archives/32/</a> 的补充<br>在原有友链基础上增加可选的rss选项<br><img src="https://s.rmimg.com/2025-03-18/1742262324-200112-2025-03-18-094451.png" alt="Image description"><br>支持自动分析rss和atom</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 本人js不好大体是这么个意思</span></span><br><span class="line"><span class="comment">// 使用 https://dev.oneall.eu.org/archives/49/ 跨域请求</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">xhrGet</span>(<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">        xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&quot;https://dev.oneall.eu.org/netdrive.php/&quot;</span> + url, <span class="literal">true</span>);</span><br><span class="line">        xhr.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span><br><span class="line">                <span class="title function_">resolve</span>(xhr.<span class="property">responseText</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`HTTP Error: <span class="subst">$&#123;xhr.status&#125;</span>`</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        xhr.<span class="property">onerror</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Network Error&#x27;</span>));</span><br><span class="line">        &#125;;</span><br><span class="line">        xhr.<span class="title function_">send</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">putRss</span>(<span class="params">linkItemsArea, rssLinkItems</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (rssLinkItems.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    linkItemsArea.<span class="property">innerHTML</span> += <span class="string">`&lt;div id=&quot;links-rss&quot;&gt;&lt;h2&gt;近期更新&lt;/h2&gt;&lt;ul&gt;&lt;/ul&gt;&lt;/div&gt;`</span>;</span><br><span class="line">    <span class="keyword">const</span> rssItemsArea = linkItemsArea.<span class="title function_">querySelector</span>(<span class="string">&#x27;#links-rss ul&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> rssLinkItem <span class="keyword">of</span> rssLinkItems) &#123;</span><br><span class="line">        <span class="title function_">xhrGet</span>(rssLinkItem)</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function"><span class="params">xmlString</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> xmlStringParser = <span class="keyword">new</span> <span class="title class_">DOMParser</span>();</span><br><span class="line">                <span class="keyword">const</span> xmlDoc = xmlStringParser.<span class="title function_">parseFromString</span>(xmlString, <span class="string">&#x27;text/xml&#x27;</span>);</span><br><span class="line">                atomFeed = xmlDoc.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;feed&#x27;</span>);</span><br><span class="line">                rssFeed = xmlDoc.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;rss&#x27;</span>);</span><br><span class="line">                <span class="keyword">if</span> (atomFeed.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> blogName = atomFeed[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;title&#x27;</span>)[<span class="number">0</span>].<span class="property">textContent</span>;</span><br><span class="line">                    rssItemsArea.<span class="property">innerHTML</span> += <span class="string">`&lt;h3&gt;<span class="subst">$&#123;blogName&#125;</span>:&lt;/h3&gt;`</span>;</span><br><span class="line">                    <span class="keyword">const</span> first10Items = [...atomFeed[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;entry&#x27;</span>)].<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">                    first10Items.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">const</span> blog_title = item.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;title&#x27;</span>)[<span class="number">0</span>].<span class="property">textContent</span>;</span><br><span class="line">                        <span class="keyword">const</span> blog_link = item.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;link&#x27;</span>)[<span class="number">0</span>].<span class="title function_">getAttribute</span>(<span class="string">&#x27;href&#x27;</span>);</span><br><span class="line">                        rssItemsArea.<span class="property">innerHTML</span> += <span class="string">`&lt;li&gt;&lt;a href=&quot;<span class="subst">$&#123;blog_link&#125;</span>&quot; target=&quot;_blank&quot;&gt;<span class="subst">$&#123;blog_title&#125;</span>&lt;/a&gt;&lt;/li&gt;`</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rssFeed.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> blogName = rssFeed[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;title&#x27;</span>)[<span class="number">0</span>].<span class="property">textContent</span>;</span><br><span class="line">                    rssItemsArea.<span class="property">innerHTML</span> += <span class="string">`&lt;h3&gt;<span class="subst">$&#123;blogName&#125;</span>:&lt;/h3&gt;`</span>;</span><br><span class="line">                    <span class="keyword">const</span> first10Items = [...rssFeed[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;item&#x27;</span>)].<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">                    first10Items.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">const</span> blog_title = item.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;title&#x27;</span>)[<span class="number">0</span>].<span class="property">textContent</span>;</span><br><span class="line">                        <span class="keyword">const</span> blog_link = item.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;link&#x27;</span>)[<span class="number">0</span>].<span class="property">textContent</span>;</span><br><span class="line">                        rssItemsArea.<span class="property">innerHTML</span> += <span class="string">`&lt;li&gt;&lt;a href=&quot;<span class="subst">$&#123;blog_link&#125;</span>&quot; target=&quot;_blank&quot;&gt;<span class="subst">$&#123;blog_title&#125;</span>&lt;/a&gt;&lt;/li&gt;`</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Unknown feed type &#x27;</span> + rssLinkItem);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">putLinks</span>(<span class="params">link_json</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> linkJson = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(link_json);</span><br><span class="line">    <span class="keyword">const</span> linkItemsArea = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;linkItemsArea&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> linkItemsHTML = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> rssLinkItems = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> linkItem <span class="keyword">of</span> linkJson) &#123;</span><br><span class="line">        linkItemsHTML += <span class="string">`&lt;div class=&quot;link-item&quot;&gt;&lt;img class=&quot;link-item-avatar&quot; src=&quot;<span class="subst">$&#123;linkItem.avatar&#125;</span>&quot;&gt;&lt;div class=&quot;link-item-content&quot;&gt;&lt;a href=&quot;<span class="subst">$&#123;linkItem.url&#125;</span>&quot; target=&quot;_blank&quot;&gt;&lt;h2&gt;<span class="subst">$&#123;linkItem.title&#125;</span>&lt;/h2&gt;&lt;/a&gt;&lt;p&gt;<span class="subst">$&#123;linkItem.description&#125;</span>&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;`</span>;</span><br><span class="line">        <span class="keyword">if</span> (linkItem.<span class="property">rss</span>) &#123;</span><br><span class="line">            rssLinkItems.<span class="title function_">push</span>(linkItem.<span class="property">rss</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    linkItemsArea.<span class="property">innerHTML</span> = linkItemsHTML;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">putRss</span>(linkItemsArea, rssLinkItems), <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#linkItemsArea</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">2</span>, <span class="number">1</span>fr);</span><br><span class="line">    <span class="attribute">gap</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">700px</span>) &#123;</span><br><span class="line">    <span class="selector-id">#linkItemsArea</span> &#123;</span><br><span class="line">        <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">1</span>, <span class="number">1</span>fr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.link-item</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid gray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.link-item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: inherit <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.link-item-avatar</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">    <span class="attribute">height</span>: auto;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">1px</span> solid gray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.link-item-content</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#linkItemsArea</span> <span class="selector-id">#links-rss</span> &#123;</span><br><span class="line">    <span class="attribute">grid-column</span>: <span class="number">1</span> / -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：异步加载最新10篇文章<br><img src="https://s.rmimg.com/2025-03-18/1742262484-796693-2025-03-18-094759.png" alt="Image description"><br>具体可看：<a href="https://dev.oneall.eu.org/links.html%EF%BC%88%E8%8B%A5%E5%8F%91%E7%8E%B0%E9%94%99%E4%BD%8D%E5%B0%B1%E6%98%AF%E7%BC%93%E5%AD%98%E6%9C%AA%E5%A4%B1%E6%95%88%EF%BC%89">https://dev.oneall.eu.org/links.html（若发现错位就是缓存未失效）</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是对 &lt;a href=&quot;https://dev.oneall.eu.org/archives/32/&quot;&gt;https://dev.oneall.eu.org/archives/32/&lt;/a&gt; 的补充&lt;br&gt;在原有友链基础上增加可选的rss选项&lt;br&gt;&lt;img src=&quot;ht</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>用php解决跨域问题</title>
    <link href="https://blog.oneall.eu.org/2025/03/17/%E7%94%A8php%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
    <id>https://blog.oneall.eu.org/2025/03/17/%E7%94%A8php%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</id>
    <published>2025-03-17T12:24:56.000Z</published>
    <updated>2025-03-17T12:24:56.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$targetUrl</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>];</span><br><span class="line"><span class="variable">$targetUrl</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$targetUrl</span>, <span class="title function_ invoke__">strpos</span>(<span class="variable">$targetUrl</span>, <span class="string">&#x27;netdrive.php/&#x27;</span>) + <span class="number">13</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$targetUrl</span> == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>(<span class="variable">$targetUrl</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="literal">true</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="literal">false</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="literal">false</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_USERAGENT, <span class="string">&#x27;PHP cURL&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Access-Control-Allow-Origin: *&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>保存为 <code>netdrive.php</code><br>只要在该php文件url后加上目标url便可，跟cf反代一样的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>夜深人静，有利于思考</title>
    <link href="https://blog.oneall.eu.org/2025/03/10/%E5%A4%9C%E6%B7%B1%E4%BA%BA%E9%9D%99-%E6%9C%89%E5%88%A9%E4%BA%8E%E6%80%9D%E8%80%83/"/>
    <id>https://blog.oneall.eu.org/2025/03/10/%E5%A4%9C%E6%B7%B1%E4%BA%BA%E9%9D%99-%E6%9C%89%E5%88%A9%E4%BA%8E%E6%80%9D%E8%80%83/</id>
    <published>2025-03-10T18:30:16.000Z</published>
    <updated>2025-03-10T18:30:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s.rmimg.com/2025-03-11/1741627488-644373-screenshot-20250311-012333-trebuchet.png" alt="Image description"><br>纯萌新一个，第一次玩到这么深<br>以前都是下水道2-3层就死了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s.rmimg.com/2025-03-11/1741627488-644373-screenshot-20250311-012333-trebuchet.png&quot; alt=&quot;Image description&quot;&gt;&lt;br&gt;纯萌新一个，第一</summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>openrouter免费api</title>
    <link href="https://blog.oneall.eu.org/2025/03/08/openrouter%E5%85%8D%E8%B4%B9api/"/>
    <id>https://blog.oneall.eu.org/2025/03/08/openrouter%E5%85%8D%E8%B4%B9api/</id>
    <published>2025-03-08T03:59:00.000Z</published>
    <updated>2025-03-08T04:00:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s.rmimg.com/2025-03-08/1741402625-724226-2025-03-08-105352.png" alt="Image description"><br>速度可以，有人说经常502，暂未发现<br>（图中是 <code>deepseek-v3</code>）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://s.rmimg.com/2025-03-08/1741402625-724226-2025-03-08-105352.png&quot; alt=&quot;Image description&quot;&gt;&lt;br&gt;速度可以，有人说经常502，暂未发现&lt;br&gt;（图中是 </summary>
      
    
    
    
    <category term="默认分类" scheme="https://blog.oneall.eu.org/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
</feed>
